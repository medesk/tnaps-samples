This is a basic sample for TNAPS that demonstrates transparent access to the components through HTTP. It consits of two components(calc and currency) and single application that uses TNAPS Host Provider built-in component for HTTP access.

	1. Requirements
	2. Compilation
	3. Deployment

1. Requirements
===============================

* Installed TNAPS and TNAPS SDK. 
  For more information about TNAPS requirements and installation, 
  see README in TNAPS installation package.

* Have a note on requirement to install the following TNAPS dlls to GAC:

  TN.ApplicationServer.dll
  TN.ApplicationServer.ComponentModel.dll 

  They are referenced from component solutions.

2. Compilation
===============================

WINDOWS
	1. Open Windows Command Line (cmd.exe);
	2. Change dir to the directory with demo1 sample
		 > cd D:\tnaps-samples\demo1
	3. Assign installed TNAPS_SDK path to the 'TNAPS_SDK' environment variable 
		 > set tnaps="C:\Program Files\TNAPS"
	4. Execute make_sample.cmd on x86 machine, or make_sample_x64.cmd on x64 machine
		> make_sample.cmd

LINUX/MAC
	
	1. Open console;
	2. Change dir to the directory with demo1 sample
		cd ~/tnaps-samples/demo1
	3. Assign installed TNAPS_SDK path to the 'TNAPS_SDK' environment variable
		export TNAPS_SDK=/opt/tnaps
	4. Assign Mono path to the 'MONO' environment variable
		export MONO=/opt/mono
	4. Execute make_sample.sh
		./make_sample.sh

This workflow produces 'demo_app.tnpak' file that represents TNAPS Application Package.

NOTE: You can define a necessary environment variables once at machine level.

3. Deployment
===============================
Open Library in TNAPS console and install Application Package produced in
the previous step. Select Applications menu item in the Library menu. 
Description of the sample application describes how it works and what 
you should do to understand the sample.

Switch to the Applications menu in TNAPS console. Create a new instance for
the installed sample application and execute it.